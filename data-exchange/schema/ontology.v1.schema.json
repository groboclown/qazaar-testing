{
  "$schema": "https://json-schema.org/draft-07/schema",
  "title": "Ontological Descriptors",
  "description": "Description of the descriptors used for a hierarchy of objects.  STATUS: ready for review",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "$schema",
    "descriptors"
  ],
  "properties": {
    "$comment": {"$ref": "#/$defs/Comment"},
    "$comments": {"$ref": "#/$defs/CommentList"},
    "$schema": {"$ref": "#/$defs/Schema"},
    "commonSourceRefs": {"$ref": "#/$defs/CommonDocumentSourceList"},
    "sources": {"$ref": "#/$defs/DocumentSources"},
    "descriptors": {
      "title": "Ontology Descriptor List",
      "description": "List of ontology descriptors supported.  If necessary, additional descriptors may live in accompanying document files.",
      "type": "array",
      "minLength": 0,
      "maxLength": 10000,
      "items": {"$ref": "Descriptor"}
    }
  },
  "$defs": {
    "Descriptor": {
      "oneOf": [
        {
          "title": "Ontology Enumerated Descriptor",
          "description": "A single ontological descriptor for a sourced object which only allows string values from a limited collection.",
          "type": "object",
          "required": ["type", "name", "enum"],
          "additionalProperties": false,
          "properties": {
            "$comment": {"$ref": "#/$defs/Comment"},
            "$comments": {"$ref": "#/$defs/CommentList"},
            "sources": {"$ref": "#/$defs/DocumentSources"},
            "type": {
              "title": "Descriptor Value Type",
              "description": "The type of descriptor defined by this definition.",
              "type": "string",
              "const": "enum"
            },
            "name": {
              "title": "Descriptor Name",
              "description": "Unique identifier for the descriptor.",
              "type": "string",
              "minLength": 1,
              "maxLength": 100
            },
            "distinct": {
              "title": "Has Distinct Values",
              "description": "If true, the descriptor's value list may not contain multiple items with the same value.",
              "type": "boolean",
              "default": false
            },
            "enum": {
              "title": "Allowed Values",
              "description": "Allowed values for the descriptor.  While the allowed list of values has a maximum, projects that require a larger number of values should instead consider using a value pattern instead.",
              "type": "array",
              "minLength": 1,
              "maxLength": 10000,
              "items": {
                "title": "Category Value",
                "description": "Allowable text for a text object category descriptor.",
                "type": "string",
                "minLength": 1,
                "maxLength": 100
              }
            },
            "maximumCount": {
              "title": "Maximum Contained Values",
              "description": "Maximum number of values contained in a single descriptor.  If 'distinct' is true, then this is the maximum number of distinct values.  Defaults to 1.",
              "type": "integer",
              "minimum": 1,
              "maximum": 100000,
              "default": 1
            }
          }
        },
        {
          "title": "Ontology Free Descriptor",
          "description": "A single ontological descriptor for a sourced object.  Note that systems that record the values, it should trim surrounding whitespace, and condense internal whitespace to a single value (so 'A  B   C' becomes 'A B C').",
          "type": "object",
          "required": ["type", "name"],
          "additionalProperties": false,
          "properties": {
            "$comment": {"$ref": "#/$defs/Comment"},
            "$comments": {"$ref": "#/$defs/CommentList"},
            "sources": {"$ref": "#/$defs/DocumentSources"},
            "type": {
              "title": "Descriptor Value Type",
              "description": "The type of descriptor defined by this definition.",
              "type": "string",
              "const": "free"
            },
            "name": {
              "title": "Descriptor Name",
              "description": "Unique identifier for the descriptor.",
              "type": "string",
              "minLength": 1,
              "maxLength": 100
            },
            "distinct": {
              "title": "Has Distinct Values",
              "description": "If true, the descriptor's value list may not contain multiple items with the same value.",
              "type": "boolean",
              "default": false
            },
            "caseSensitive": {
              "title": "Value Case Sensitivity",
              "description": "Determines whether the systems interpret values exactly as written, or if it should ignore the case.  By default, all descriptors ignore value case.  Case sensitivity should, where possible, ignore case for the complete UTF characters.",
              "type": "boolean",
              "default": false
            },
            "constraints": {
              "title": "Limitations on Values",
              "description": "A list of limitations for the allowed values for this descriptor.  If the list contains multiple constraints, the descriptor value must apply to all of them.",
              "type": "array",
              "minLength": 0,
              "maxLength": 1000,
              "items": {"$ref": "ValueConstraint"}
            },
            "maximumLength": {
              "title": "Maximum Value Length",
              "description": "Maximum number of characters of the free value.  In the case of UTF-8, each diacritic mark counts as a character.",
              "type": "integer",
              "minimum": 1,
              "maximum": 100000,
              "default": 1000
            },
            "maximumCount": {
              "title": "Maximum Contained Values",
              "description": "Maximum number of values contained in a single descriptor.  If 'distinct' is true, then this is the maximum number of distinct values.  Default is '1'.",
              "type": "integer",
              "minimum": 1,
              "maximum": 100000,
              "default": 1
            }
          }
        },
        {
          "title": "Ontology Numeric Descriptor",
          "description": "A single ontological descriptor for a sourced object.  Note that systems that record the values, it should trim surrounding whitespace, and condense internal whitespace to a single value (so 'A  B   C' becomes 'A B C').",
          "type": "object",
          "required": ["type", "name", "minimum", "maximum"],
          "additionalProperties": false,
          "properties": {
            "$comment": {"$ref": "#/$defs/Comment"},
            "$comments": {"$ref": "#/$defs/CommentList"},
            "sources": {"$ref": "#/$defs/DocumentSources"},
            "type": {
              "title": "Descriptor Value Type",
              "description": "The type of descriptor defined by this definition.",
              "type": "string",
              "const": "number"
            },
            "name": {
              "title": "Descriptor Name",
              "description": "Unique identifier for the descriptor.",
              "type": "string",
              "minLength": 1,
              "maxLength": 100
            },
            "distinct": {
              "title": "Has Distinct Values",
              "description": "If true, the descriptor's value list may not contain multiple items with the same value.",
              "type": "boolean",
              "default": false
            },
            "minimum": {
              "title": "Minimum Value",
              "description": "Smallest allowed value for the descriptor.  Must be less or equal to the maximum.",
              "type": "number",
              "minimum": -1e10000,
              "maximum": 1e10000
            },
            "maximum": {
              "title": "Maximum Value",
              "description": "Largest allowed value for the descriptor.  Must be greater or equal to the minimum.",
              "type": "number",
              "minimum": -1e10000,
              "maximum": 1e10000
            },
            "maximumCount": {
              "title": "Maximum Contained Values",
              "description": "Maximum number of values contained in a single descriptor.  If 'distinct' is true, then this is the maximum number of distinct values.  The default is 1.",
              "type": "integer",
              "minimum": 1,
              "maximum": 100000,
              "default": 1
            }
          }
        }        
      ]
    },
    "ValueConstraint": {
      "title": "Value Constraint",
      "description": "A single restriction on the allowed value text.",
      "type": "object",
      "required": ["type"],
      "additionalProperties": false,
      "properties": {
        "$comment": {"$ref": "#/$defs/Comment"},
        "$comments": {"$ref": "#/$defs/CommentList"},
        "sources": {"$ref": "#/$defs/DocumentSources"},
        "type": {
          "title": "Value Constraint Type",
          "description": "The kind of constraint to apply.",
          "type": "string",
          "enum": [
            "pattern",
            "format",
            "length",
            "value-range"
          ]
        },
        "pattern": {
          "title": "Value Pattern",
          "description": "Regular expression (non-backtracking) pattern the descriptor's values must match.",
          "type": "string",
          "format": "regex",
          "minLength": 1,
          "maxLength": 1000
        },
        "format": {
          "title": "Value Format",
          "description": "A pre-defined value format.  While a few formats should exist built-in, no explicit list exists at this time.",
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "minimum": {
          "title": "Minimum",
          "description": "The minimum value (length or value-range).",
          "type": "numeric",
          "minimum": -1.0e10000,
          "maximum": 1.0e10000
        },
        "maximum": {
          "title": "Maximum",
          "description": "The maximum value (length or value-range).",
          "type": "numeric",
          "minimum": -1.0e10000,
          "maximum": 1.0e10000
        }
      }
    },
    "Comment": {
      "title": "Author Comment",
      "description": "Document author comment text.",
      "type": "string",
      "minLength": 0,
      "maxLength": 4000
    },
    "CommentList": {
      "title": "Author Comment List",
      "description": "List of document author comments.",
      "type": "array",
      "minLength": 0,
      "maxLength": 100,
      "items": {"$ref": "#/$defs/Comment"}
    },
    "Schema": {
      "title": "Schema Version",
      "description": "Data exchange schema format.",
      "type": "string",
      "format": "url",
      "minLength": "6",
      "maxLength": "2000"
    },
    "Id": {
      "title": "Unique Identifier",
      "description": "Unique identifying string for the item.  These should be ASCII alpha-numeric + simple separators.",
      "type": "string",
      "pattern": "^[a-zA-Z0-9_.,:;+$?/#%&*-]+$",
      "minLength": 1,
      "maxLength": 4000
    },
    "CommonDocumentSourceList": {
      "title": "Common Document Source List",
      "description": "Pool of document source references, which may be referenced from the source locations.",
      "type": "array",
      "minLength": 0,
      "maxLength": 4000,
      "items": {"$ref": "#/$defs/CommonDocumentSource"}
    },
    "CommonDocumentSource": {
      "title": "Common Document Source",
      "description": "A shared primary document reference.  Source locations can refer to this document through the identifier, but should also include an anchor.",
      "type": "object",
      "required": [
        "id",
        "rep",
        "loc"
      ],
      "additionalProperties": false,
      "properties": {
        "$comment": {"$ref": "#/$defs/Comment"},
        "$comments": {"$ref": "#/$defs/CommentList"},
        "id": {"$ref": "#/$defs/Id"},
        "rep": {
          "title": "Repository Category",
          "description": "General repository category containing the source.  This might be 'git' if stored in a Git repository, or 'aws-s3', if stored in an Amazon S3 key store, or 'intranet' if stored in an Intranet source.  The different programs may have their own requirements for this value.  It does not define a location within the repository, though.",
          "type": "string",
          "minLength": 1,
          "maxLength": 200
        },
        "loc": {
          "title": "Source Resource",
          "description": "The resource identifier within the 'repo'.  Depending on the repo type, this most likely has a required format for that repository.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8000
        },
        "ver": {
          "title": "Version",
          "description": "An identifier to reference the unique version of the source, as dictated by the repository type.  This might a commit id, or document revision, or a date-time stamp.  The repository type may not have the ability to retrieve this version (someone may have deleted it, or the repository does not support versioning).",
          "type": "string",
          "minLength": 1,
          "maxLength": 200
        }
      }
    },
    "DocumentSources": {
      "title": "Document Sources",
      "description": "Sources that contained the original definitions.  A tool collected those descriptions into this document.",
      "type": "array",
      "minLength": 0,
      "maxLength": 4000,
      "items": {"$ref": "#/$defs/SourceLocation"}
    },
    "SourceLocation": {
      "title": "Source Location",
      "description": "Pointer to the location of the source.  Due to the prevalence of this object, property names use a truncated form to shrink file sizes.  The 'ref' points to a common document source identifier in the commonSourceRefs list.",
      "type": "object",
      "required": [
        "ref"
      ],
      "additionalProperties": false,
      "properties": {
        "$comment": {"$ref": "#/$defs/Comment"},
        "$comments": {"$ref": "#/$defs/CommentList"},
        "ref": {"$ref": "#/$defs/Id"},
        "a": {
          "title": "Anchor",
          "description": "A location within the source.  This depends upon the source type; it might be an HTML anchor tag, or a paragraph title, or a function name, or a line number, or an opcode index.",
          "type": "string",
          "minLength": 1,
          "maxLength": 4000
        }
      }
    }
  }
}
